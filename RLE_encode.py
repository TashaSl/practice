'''
Условие задачи были даны в курсе "Адаптивный тренажер Python" на stepic.org

На вход строка, содержащая символы латинского алфавита. 
Эта строка разбивается на группы одинаковых символов, идущих подряд (серии). 
Код формируется следующим образом:. Сначала пишется длина серии повторяющихся
символов, затем сам символ.
У серии длиной в 1 символ количество повторений будет опускать.
Формат ввода:
Одна строка, содержащая произвольные символы латинского алфавита
Формат вывода:
Строка, содержащая закодированную последовательность
'''
from functools import reduce
from itertools import groupby

# функция, которая делит строку на серии
func = lambda string: map(lambda x: cond_func(list(x[1])), groupby(string))

# функция, возвращающая строку длина серии + сам символ
cond_func = lambda arr: str(len(arr)) + arr[0] if len(arr) > 1 else arr[0]

# функция, шифрующая строку
new_string = lambda string: reduce(lambda A, x: A + x, func(string), '')

print(new_string(input()))
