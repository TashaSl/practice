'''
Условие задачи были даны в курсе "Адаптивный тренажер Python" на stepic.org

Реализовать алгоритм дешифровки строк, закодированных с помощью одного из
самых простых вариантов кодирования длин серий.

На вход алгоритму подается строка, содержащая цифры и символы латинского
алфавита. Эта строка разбивается на "серии",которые кодируются парой
число-символ или просто символ (в таком случае число считается равным 1).
Результат должен содержать эти серии в том же порядке, что они и встречаются
в исходной строке, при этом каждая серия раскрывается в последовательность
символов соответствующей длины.
Формат ввода:
Одна строка, содержащая закодированную последовательность.
Формат вывода:
Строка, содержащая раскодированную последовательность.
'''
import re
from functools import reduce

# функция, которая делит строку на серии
devide_line = lambda string: re.findall('[0-9]{0,}[A-Za-z]', string)

# функция, возвращающая пары "число-символ"
count_repeat = lambda arr: map(lambda x: (1, x[-1]) if len(x) == 1 else (int(x[:-1]), x[-1]), arr)

# функция, дешифрующая строку
new_string = lambda string: reduce(lambda A, x: A + x[0] * x[1], count_repeat(devide_line(string)), '')

print(new_string(input()))
